ExternalEvents_M = {|opARet,opACall,term,object|}

assert T_M(0) :[deterministic]
-- zeno freedom
assert T_M(0) :[divergence-free]
assert T_M(0) ; RUN({tock}) :[deadlock-free]

-- no time locks
assert RUN({tock}) ||| CHAOS(ExternalEvents_M)      [F= prioritise((T_M(0) ; RUN({tock})) |\ union(ExternalEvents_M,{tock}),<{},{tock}>)

-- every state is reachable in this module
assert not STOP [T= ShowEnteredV_ctrl0_stm0(T_M_VS(0)) |\ {|ctrl0_stm0_enteredV."ctrl0_stm0_s0"|}
assert not STOP [T= ShowEnteredV_ctrl0_stm0(T_M_VS(0)) |\ {|ctrl0_stm0_enteredV."ctrl0_stm0_s1"|}
assert not STOP [T= ShowEnteredV_ctrl0_stm0(T_M_VS(0)) |\ {|ctrl0_stm0_enteredV."ctrl0_stm0_f0"|}

-- timed model is a refinement
assert sbisim(diamond(M(0))) [F= T_M(0) \ {tock}
assert sbisim(diamond(M_VS(0))) [T= T_M_VS(0) \ {tock}

-- do time constraints constrain traces?
assert T_M(0) \ {tock} [T= sbisim(diamond(M(0)))
assert T_M_VS(0) \ {tock} [T= sbisim(diamond(M_VS(0)))
