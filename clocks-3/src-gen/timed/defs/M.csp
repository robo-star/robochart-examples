Timed(OneStep) {
	
-- declaring module memory

M_visibleMemoryEvents = {||}
		
Memory_rp0(id) = SKIP

M(id) = prioritise((	(ctrl0(id)[[ctrl0_terminate <- M_terminate, ctrl0_object <- object, ctrl0_term <- term]]
	[|union({||},
	{||})|]
	Memory_rp0(id)
	)\union({||},{||})
	[|{|M_terminate|}|>SKIP)\{|M_terminate|},<M_visibleMemoryEvents,{tock}>)
	
-- visible state equivalent

M_VS(id) = prioritise((	(ctrl0_VS(id)[[ctrl0_terminate <- M_terminate, ctrl0_object <- object, ctrl0_term <- term]]
	[|union({||},
	{||})|]
	Memory_rp0(id)
	)\union({||},{||})
	[|{|M_terminate|}|>SKIP)\{|M_terminate|},<M_visibleMemoryEvents,{tock}>)
}	
